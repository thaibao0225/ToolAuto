// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToolAuto.Data.EF;

namespace ToolAuto.Migrations
{
    [DbContext(typeof(GomLuaDbContext))]
    [Migration("20210520060843_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToolAuto.Model.Shop.UserChoTotModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserChoTotModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Shop.UserLazadaModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserLazadaModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Shop.UserMarketingPlaceFbModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserMarketingPlaceFbModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Shop.UserSendoModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserSendoModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Shop.UserShopeeModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserShopeeModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Socical.UserFbModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserFbModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Socical.UserGoogleModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserGoogleModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Socical.UserInstagramModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserInstagramModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Socical.UserTikTokModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserTikTokModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Socical.UserYoutubeModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserYoutubeModel");
                });

            modelBuilder.Entity("ToolAuto.Model.Socical.UserZaloModel", b =>
                {
                    b.Property<string>("user")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user");

                    b.ToTable("UserZaloModel");
                });

            modelBuilder.Entity("ToolAuto.Model.UserOtherModel", b =>
                {
                    b.Property<int>("MyProperty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("MyProperty");

                    b.ToTable("UserOtherModel");
                });
#pragma warning restore 612, 618
        }
    }
}
